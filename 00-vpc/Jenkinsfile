pipeline {
    agent {
        label 'AGENT-1'
    }
    options{
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }

    parameters {

        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'select action')
    }
    stages {
        stage('Init and Plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds-rakesh'){
                sh """
                cd 00-vpc
                terraform init -reconfigure
                terraform plan -out=tfplan
                """
                }
            }
        }
        stage('Init and Plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds-rakesh'){
                sh """
                cd 00-vpc
                if [ ${params.ACTION} == 'apply' ]
                then
                    terraform apply -auto-approve tfplan
                elif [ ${params.ACTION} == 'destroy' ]
                    terraform destroy -auto-approve
                fi
                """
                    }
                }
            }

    }
    post {
        always {
            echo "this section runs always"
            deleteDir()
        }
        success{
            echo "this section runs when pipeline success"
        }
        failure{
            echo "this section runs when pipeline failure"
        }
    }
}
