pipeline {
    agent {
        label 'AGENT-1'
    }
    options{
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
    }

    parameters {

        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'select action')
    }
    stages {
        stage('Init') {
            steps {
                sh 'cd 00-vpc'
                sh 'terraform init --reconfigure'
            }
        }
        stage('Plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds-terraform-user'){
                    sh 'cd 00-vpc'
                    sh 'terraform plan -out=tfplan'
                }
                
            }
        }
        stage('Deploy') {
            when {
                expression { env.GIT_BRANCH != "origin/main" }
            }
            steps {
                sh 'echo This is deploy'
            }
        }
        stage('Print Params'){
            steps{
                echo "Choice: ${params.CHOICE}" 
            }
        }

    }
    post {
        always {
            echo "this section runs always"
            deleteDir()
        }
        success{
            echo "this section runs when pipeline success"
        }
        failure{
            echo "this section runs when pipeline failure"
        }
    }
}
